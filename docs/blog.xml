<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>John Pinto</title>
<link>https://johnppinto.github.io/blog/blog.html</link>
<atom:link href="https://johnppinto.github.io/blog/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is John Pinto&#39;s Personal Blog.</description>
<generator>quarto-1.3.302</generator>
<lastBuildDate>Sat, 19 Nov 2022 18:30:00 GMT</lastBuildDate>
<item>
  <title>TensorFlow Modelling — Sequential Vs Functional</title>
  <dc:creator>John Pinto</dc:creator>
  <link>https://johnppinto.github.io/blog/posts/2022-11-20_tf_modelling/index.html</link>
  <description><![CDATA[ 




<section id="what-is-a-neural-network" class="level1">
<h1><strong>What is a Neural Network?</strong></h1>
<p><em>“A computer system modeled on the human brain and nervous system.”</em> You can google it and this is the answer you will get. It’s a simple answer but does not explain why it is used in Deep Learning.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://johnppinto.github.io/blog/posts/2022-11-20_tf_modelling/images/nn_brain.webp" class="img-fluid figure-img" style="width:70.0%"></p>
</figure>
</div>
<p>Neural Network also known as an Artificial Neural Network, mimics the same architecture of our human brain. It’s the core of any Deep Learning or Machine Learning Algorithm. It consists of three essential factors also called <strong>Nodes or Layers</strong>, that make up the neural network architecture. First, the <strong>Input Layer</strong> is the entry point for any data. After the data passes through the input layer it moves toward multiple <strong>Hidden Layers</strong>, this is where patterns are learned by the neural network using weights and biases. Once the network has reached its mathematical conclusion in the hidden layers it passes to the <strong>Output Layer</strong>.</p>
<p>Now, that we understand a neural network, how do we practically use them? Here comes TensorFlow, an open-source Python library for Deep Learning. <strong>TensorFlow</strong> helps us in creating neural network models that are capable to solve different types of deep learning problems, due to the complexity of neural networks TensorFlow uses the <strong>Keras</strong> library to make it simple and easy to use.</p>
<p>Tensorflow and Keras provide us with two different methods to initiate and implement our neural network architecture, they are as follows:</p>
<ol type="1">
<li>The Sequential API Model</li>
<li>The Functional API Model</li>
</ol>
<center>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://johnppinto.github.io/blog/posts/2022-11-20_tf_modelling/images/architecture.webp" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Fig 1: Sequential API Vs Functional API Architecture</figcaption><p></p>
</figure>
</div>
</center>
<section id="the-sequential-api-model" class="level2">
<h2 class="anchored" data-anchor-id="the-sequential-api-model">1. The Sequential API Model</h2>
<p>The very first model that TensorFlow teaches us is the Sequential Model because it is the fastest and the simplest way to create a neural network. Now you might be wondering when to use a sequential model. <em>You use it when you have one input and one output, just like everything moves in a sequence, one at a time</em>.</p>
<p>Sequential Model Example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sequential Model </span></span>
<span id="cb1-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.Sequential(</span>
<span id="cb1-5">    [</span>
<span id="cb1-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Input Layer</span></span>
<span id="cb1-7">        tf.keras.Input(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_layer"</span>),</span>
<span id="cb1-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4 Hidden Layers</span></span>
<span id="cb1-9">        tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer1"</span>),</span>
<span id="cb1-10">        tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer2"</span>),</span>
<span id="cb1-11">        tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer3"</span>),</span>
<span id="cb1-12">        tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer4"</span>),</span>
<span id="cb1-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output Layer</span></span>
<span id="cb1-14">        tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigmoid"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_layer"</span>)</span>
<span id="cb1-15">    ]</span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The above code can also be written using add() method.</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.Sequential()</span>
<span id="cb1-21">model.add(tf.keras.Input(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_layer"</span>))</span>
<span id="cb1-22">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer1"</span>))</span>
<span id="cb1-23">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer2"</span>))</span>
<span id="cb1-24">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer3"</span>))</span>
<span id="cb1-25">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden_layer4"</span>))</span>
<span id="cb1-26">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigmoid"</span>, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_layer"</span>))</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>Tensorflow</category>
  <category>Keras</category>
  <category>AI</category>
  <category>Neural Network</category>
  <category>Architecture</category>
  <guid>https://johnppinto.github.io/blog/posts/2022-11-20_tf_modelling/index.html</guid>
  <pubDate>Sat, 19 Nov 2022 18:30:00 GMT</pubDate>
  <media:content url="https://johnppinto.github.io/blog/posts/2022-11-20_tf_modelling/featured.webp" medium="image" type="image/webp"/>
</item>
</channel>
</rss>
